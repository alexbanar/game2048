1)FROM gradle:jdk14 as builder
2)COPY --chown=gradle:gradle . /home/gradle/fxgame
3)WORKDIR /home/gradle/fxgame
4)RUN gradle dist --no-daemon
5)RUN unzip /home/gradle/fxgame/build/distributions/game2048-*.zip -d /tmp/fxgame

7)FROM ubuntu:18.04
8)COPY --from=builder /tmp/fxgame/image/ /fxgame
9)RUN apt-get update && apt-get install --no-install-recommends -y xorg libgl1-mesa-glx && rm -rf /var/lib/apt/lists/* 
10)WORKDIR /fxgame
11)CMD ./bin/fxgame

1) Expected:
'FROM gradle:jdk14 as builder'. 
There are two FROM lines in this Dockerfile. Each FROM defines a stage, and a stage can optionally have a name.
The first FROM is named 'builder'. We can reference it in the following stage by this name.
The 'builder' stage is based on the Gradle Docker image for Java 14. 
It contains both a Java 14 JDK and a Gradle installation.
Real: as Expected:

2)Expected:
Coping to our project files including Java source code by 'COPY --chown=gradle:gradle . /home/gradle/fxgame',
will copy our project to /home/gradle/fxgame directory inside the container to the directory /home/gradle/fxgame.
Real: as Expected:

3)Expected:
'WORKDIR /home/gradle/fxgame' - defines new default path /home/gradle/fxgame in the first FROM stage
Real: as Expected:

4)Expected:
'RUN gradle --no-daemon' command will generate zip archive in build\dist directory. run Gradle build(compile)
'RUN gradle dist --no-daemon'  

with .

on which 'RUN gradle dist --no-daemon' command' runs in the first FROM stage.



'RUN unzip /home/gradle/fxgame/build/distributions/game2048-*.zip -d /tmp/fxgame'
takes 
